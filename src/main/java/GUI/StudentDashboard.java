/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package GUI;
import constants.Constants;
import dkhp.DKHP;
import dkhp.DKHPDAO;
import dkhp.SinhVienHocPhan;
import dkhp.SinhVienHocPhanDAO;
import hocki.HocKi;
import hocki.HocKiDAO;
import hocki.HocKiHienTai;
import hocki.HocKiHienTaiDAO;
import hocphan.HocPhan;
import hocphan.HocPhanDAO;
import java.sql.Array;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import java.util.Objects;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JOptionPane;
import javax.swing.JRadioButton;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;
import lop.Lop;
import lop.LopDAO;
import monhoc.MonHoc;
import monhoc.MonHocDAO;
import taikhoan.TaiKhoan;
import taikhoan.TaiKhoanDAO;
import utils.DateTimeUtil;
import vaitro.GiaoVu;
import vaitro.GiaoVuDAO;
import vaitro.SinhVien;
import vaitro.SinhVienDAO;

/**
 *
 * @author Admin
 */
public class StudentDashboard extends javax.swing.JFrame {

    /**
     * Creates new form ManagerDashboard
     */
    private SinhVien sinhVien;
    private List<HocPhan> dsHocPhan = null;
    private List<Lop> dsLop = null;
    private List<HocPhan> dsDaDangKi = null;
    public StudentDashboard(TaiKhoan tk) {
        this.sinhVien = SinhVienDAO.timSinhVienTK(tk.getIdTk());
        loadData();
        initComponents();

    }

    public StudentDashboard() {
        this.sinhVien = SinhVienDAO.timSinhVien(1);
        loadData();
        initComponents();
    }
    
    public final void loadData(){
        dsHocPhan = HocPhanDAO.layDanhSach("");
        dsLop = LopDAO.dsLop();
        dsDaDangKi = SinhVienHocPhanDAO.xemHpCuaSv(sinhVien);
    }
    public String[][] mappingDsHocPhan(List<HocPhan> dsHocPhan){
        String[][] result = new String[dsHocPhan.size()][Constants.hocPhanHeader.length];
        for (int i=0;i<dsHocPhan.size();i++){
            HocPhan hp = HocPhanDAO.timHocPhan(dsHocPhan.get(i).getMaHocPhan());
            String[] d={
                hp.getMaHocPhan(), hp.getMonHoc().getTenMonHoc(),String.valueOf(hp.getMonHoc().getSoTinChi()),
                hp.getGvLyThuyet(),String.valueOf(hp.getSoLuongToiDa()),hp.getNgayHoc(),
                caHocIntToString(hp.getCaHoc()-1),hp.getTenPhongHoc()                   
            };
            result[i]=d;
        }
        return result;    
    }
    public String[][] mappingDsLop (List<Lop> dsLop){
        String[][] result = new String[dsLop.size()][Constants.lopHeader.length];
        for (int i=0;i<dsLop.size();i++){
            Lop t = dsLop.get(i);
            Integer soLuong = LopDAO.demSoLuongSV(t.getIdLop(), null);
            Integer soLuongNam = LopDAO.demSoLuongSV(t.getIdLop(), "nam");
            Integer soLuongNu = soLuong - soLuongNam;
            String[] l={t.getTenLop(),String.valueOf(soLuong),String.valueOf(soLuongNam),String.valueOf(soLuongNu)};
            result[i]=l;
        }
        return result;        
    }
    public String[] layDsTenLop (List<Lop> dsLop){
        String[] result = new String[dsLop.size()];
        for (int i=0;i<dsLop.size();i++){
            Lop t = dsLop.get(i);
            result[i] = t.getTenLop();
        }
        return result;        
    }
    public String caHocIntToString(int index){
        return Constants.caHocStrings[index];
    }
    public void updateAllTable(String keyword){
        updateHocPhanTable(keyword);
        updateDaDangKiTable();
    }
    public void updateHocPhanTable(String keyword){
        DefaultTableModel tableModel = (DefaultTableModel) hocPhanTable.getModel();
        dsHocPhan = HocPhanDAO.layDanhSach(keyword);
        tableModel.setDataVector(mappingDsHocPhan(dsHocPhan), Constants.hocPhanHeader);
        tableModel.fireTableDataChanged();   
        soHocPhanLabel.setText(dsHocPhan.size() + " kết quả");
    }
    public void updateDaDangKiTable(){
        DefaultTableModel tableModel = (DefaultTableModel) daDangKiTable.getModel();
        dsDaDangKi = SinhVienHocPhanDAO.xemHpCuaSv(sinhVien);
        tableModel.setDataVector(mappingDsHocPhan(dsDaDangKi), Constants.hocPhanHeader);
        tableModel.fireTableDataChanged();   
    }       
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        genderBtnGroup = new javax.swing.ButtonGroup();
        infoPanel = new javax.swing.JPanel();
        maGvLabel = new javax.swing.JLabel();
        maGvText = new javax.swing.JTextField();
        tenGvLabel = new javax.swing.JLabel();
        tenGvText = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        diaChiText = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        sdtText = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        tenDangNhapText = new javax.swing.JTextField();
        namBtn = new javax.swing.JRadioButton();
        namBtn.setActionCommand("nam");
        nuBtn = new javax.swing.JRadioButton();
        nuBtn.setActionCommand("nữ");
        ngaySinhPicker = new com.github.lgooddatepicker.components.DatePicker();
        ngayTaoPicker = new com.github.lgooddatepicker.components.DateTimePicker();
        thayDoiBtn = new javax.swing.JButton();
        doiMatKhauBtn = new javax.swing.JButton();
        dangXuatBtn = new javax.swing.JButton();
        lopLabel = new javax.swing.JLabel();
        lopCombo = new javax.swing.JComboBox<>();
        operationsPanel = new javax.swing.JTabbedPane();
        hocPhanPanel = new javax.swing.JPanel();
        timHocPhanText = new javax.swing.JTextField();
        soHocPhanLabel = new javax.swing.JLabel();
        hocPhanScrollPane = new javax.swing.JScrollPane();
        hocPhanTable = new JTable(new DefaultTableModel(mappingDsHocPhan(dsHocPhan),Constants.hocPhanHeader));
        timHocPhanBtn = new javax.swing.JButton();
        dangKiBtn = new javax.swing.JButton();
        daDangKiPanel = new javax.swing.JPanel();
        daDangKiScrollpane = new javax.swing.JScrollPane();
        daDangKiTable = new javax.swing.JTable();
        huyDangKiBtn = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Sinh viên");
        setForeground(java.awt.Color.darkGray);
        setSize(new java.awt.Dimension(855, 550));
        getContentPane().setLayout(new java.awt.GridBagLayout());

        infoPanel.setBorder(javax.swing.BorderFactory.createCompoundBorder(javax.swing.BorderFactory.createEmptyBorder(4, 4, 4, 4), javax.swing.BorderFactory.createTitledBorder(null, "Thông tin cá nhân:", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("sansserif", 1, 12), new java.awt.Color(0, 0, 0)))); // NOI18N
        infoPanel.setLayout(new java.awt.GridBagLayout());

        maGvLabel.setText("MSSV:");
        maGvLabel.setForeground(new java.awt.Color(0, 0, 0));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        infoPanel.add(maGvLabel, gridBagConstraints);

        maGvText.setText(this.sinhVien.getMssv());
        maGvText.setDisabledTextColor(new java.awt.Color(0, 0, 0));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 0.2;
        infoPanel.add(maGvText, gridBagConstraints);

        tenGvLabel.setText("Tên sinh viên");
        tenGvLabel.setForeground(new java.awt.Color(0, 0, 0));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        infoPanel.add(tenGvLabel, gridBagConstraints);

        tenGvText.setText(this.sinhVien.getHoTen());
        tenGvText.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tenGvTextActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 0.2;
        infoPanel.add(tenGvText, gridBagConstraints);

        jLabel1.setText("Địa chỉ:");
        jLabel1.setForeground(new java.awt.Color(0, 0, 0));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        infoPanel.add(jLabel1, gridBagConstraints);

        diaChiText.setText(sinhVien.getDiaChi());
        diaChiText.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                diaChiTextActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 0.2;
        infoPanel.add(diaChiText, gridBagConstraints);

        jLabel2.setText("Số điện thoại:");
        jLabel2.setForeground(new java.awt.Color(0, 0, 0));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        infoPanel.add(jLabel2, gridBagConstraints);

        sdtText.setText(this.sinhVien.getSdt());
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 0.2;
        infoPanel.add(sdtText, gridBagConstraints);

        jLabel3.setText("Ngày sinh:");
        jLabel3.setForeground(new java.awt.Color(0, 0, 0));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        infoPanel.add(jLabel3, gridBagConstraints);

        jLabel4.setText("Giới tính:");
        jLabel4.setForeground(new java.awt.Color(0, 0, 0));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        infoPanel.add(jLabel4, gridBagConstraints);

        jLabel6.setText("Ngày tạo:");
        jLabel6.setForeground(new java.awt.Color(0, 0, 0));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        infoPanel.add(jLabel6, gridBagConstraints);

        jLabel7.setText("Tên đăng nhập:");
        jLabel7.setForeground(new java.awt.Color(0, 0, 0));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        infoPanel.add(jLabel7, gridBagConstraints);

        tenDangNhapText.setEditable(false);
        tenDangNhapText.setText(this.sinhVien.getTaiKhoan().getTenDangNhap());
        tenDangNhapText.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        tenDangNhapText.setDisabledTextColor(new java.awt.Color(0, 0, 0));
        tenDangNhapText.setEnabled(false);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 0.2;
        infoPanel.add(tenDangNhapText, gridBagConstraints);

        genderBtnGroup.add(namBtn);
        namBtn.setSelected(sinhVien.getGioiTinh().equals("nam")
        );
        namBtn.setText("nam");
        namBtn.setForeground(new java.awt.Color(0, 0, 0));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        infoPanel.add(namBtn, gridBagConstraints);

        genderBtnGroup.add(nuBtn);
        nuBtn.setSelected(sinhVien.getGioiTinh().equals("nữ")
        );
        nuBtn.setText("nữ");
        nuBtn.setForeground(new java.awt.Color(0, 0, 0));

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        infoPanel.add(nuBtn, gridBagConstraints);

        ngaySinhPicker.setDate(DateTimeUtil.convertToLocalDateViaSqlDate(this.sinhVien.getNgaySinh())
        );
        ngaySinhPicker.setFocusable(false);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 0.2;
        infoPanel.add(ngaySinhPicker, gridBagConstraints);

        ngayTaoPicker.setDateTimePermissive(DateTimeUtil.convertToLocalDateTimeViaSqlTimestamp(this.sinhVien.getTaiKhoan().getNgayTao())
        );
        ngayTaoPicker.setEnabled(false);
        ngayTaoPicker.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        ngayTaoPicker.setForeground(new java.awt.Color(0, 0, 0));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 0.2;
        infoPanel.add(ngayTaoPicker, gridBagConstraints);

        thayDoiBtn.setText("Thay đổi");
        thayDoiBtn.setForeground(new java.awt.Color(0, 0, 0));
        thayDoiBtn.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        thayDoiBtn.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        thayDoiBtn.setVerifyInputWhenFocusTarget(false);
        thayDoiBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                thayDoiBtnActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        infoPanel.add(thayDoiBtn, gridBagConstraints);

        doiMatKhauBtn.setText("Đổi mật khẩu");
        doiMatKhauBtn.setForeground(new java.awt.Color(0, 0, 0));
        doiMatKhauBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                doiMatKhauBtnActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 80);
        infoPanel.add(doiMatKhauBtn, gridBagConstraints);

        dangXuatBtn.setText("Đăng xuất");
        dangXuatBtn.setForeground(new java.awt.Color(0, 0, 0));
        dangXuatBtn.setToolTipText("");
        dangXuatBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                dangXuatBtnActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 185);
        infoPanel.add(dangXuatBtn, gridBagConstraints);

        lopLabel.setForeground(new java.awt.Color(0, 0, 0));
        lopLabel.setText("Lớp:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        infoPanel.add(lopLabel, gridBagConstraints);

        lopCombo.setModel(new DefaultComboBoxModel(layDsTenLop(dsLop)));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        infoPanel.add(lopCombo, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTH;
        gridBagConstraints.weightx = 1.0;
        getContentPane().add(infoPanel, gridBagConstraints);

        hocPhanPanel.setLayout(new java.awt.GridBagLayout());

        timHocPhanText.setText("Tìm mã môn,  tên môn, giáo viên, phòng học");
        timHocPhanText.setToolTipText("");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHEAST;
        gridBagConstraints.weightx = 0.7;
        gridBagConstraints.insets = new java.awt.Insets(20, 50, 0, 100);
        hocPhanPanel.add(timHocPhanText, gridBagConstraints);

        soHocPhanLabel.setText(dsHocPhan.size() + " kết quả"
        );
        soHocPhanLabel.setForeground(new java.awt.Color(0, 0, 0));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(5, 60, 10, 0);
        hocPhanPanel.add(soHocPhanLabel, gridBagConstraints);

        hocPhanScrollPane.setRowHeaderView(hocPhanTable);
        hocPhanScrollPane.setViewportView(hocPhanTable);

        hocPhanTable.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_ALL_COLUMNS);
        hocPhanTable.setCellSelectionEnabled(true);
        hocPhanTable.setRowHeight(20);
        hocPhanTable.setShowGrid(true);
        hocPhanScrollPane.setViewportView(hocPhanTable);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTH;
        gridBagConstraints.weightx = 0.8;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 10);
        hocPhanPanel.add(hocPhanScrollPane, gridBagConstraints);

        timHocPhanBtn.setText("Tìm kiếm");
        timHocPhanBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                timHocPhanBtnActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        gridBagConstraints.insets = new java.awt.Insets(20, 0, 0, 10);
        hocPhanPanel.add(timHocPhanBtn, gridBagConstraints);

        dangKiBtn.setText("Đăng kí");
        dangKiBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                dangKiBtnActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTH;
        hocPhanPanel.add(dangKiBtn, gridBagConstraints);

        operationsPanel.addTab("Học phần mở kì này", hocPhanPanel);

        daDangKiPanel.setLayout(new java.awt.GridBagLayout());

        daDangKiScrollpane.setColumnHeaderView(daDangKiTable);
        daDangKiScrollpane.setRowHeaderView(daDangKiTable);
        daDangKiScrollpane.setViewportView(daDangKiTable);

        daDangKiTable.setModel(new DefaultTableModel(mappingDsHocPhan(dsDaDangKi),Constants.hocPhanHeader));
        daDangKiScrollpane.setViewportView(daDangKiTable);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 0.8;
        gridBagConstraints.weighty = 1.0;
        daDangKiPanel.add(daDangKiScrollpane, gridBagConstraints);

        huyDangKiBtn.setText("Hủy đăng kí");
        huyDangKiBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                huyDangKiBtnActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTH;
        daDangKiPanel.add(huyDangKiBtn, gridBagConstraints);

        operationsPanel.addTab("Học phần đã đăng kí", daDangKiPanel);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 10, 0, 10);
        getContentPane().add(operationsPanel, gridBagConstraints);

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void tenGvTextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tenGvTextActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_tenGvTextActionPerformed

    private void diaChiTextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_diaChiTextActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_diaChiTextActionPerformed

    private void thayDoiBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_thayDoiBtnActionPerformed
        // TODO add your handling code here:
        sinhVien.setMssv(maGvText.getText());
        sinhVien.setDiaChi(diaChiText.getText());
        sinhVien.setGioiTinh(genderBtnGroup.getSelection().getActionCommand());
        sinhVien.setHoTen(tenGvText.getText());
        sinhVien.setNgaySinh(DateTimeUtil.convertToDateViaLocalDate(ngaySinhPicker.getDate()));
        sinhVien.setSdt(sdtText.getText());
        Lop lopHienTai = dsLop.get(lopCombo.getSelectedIndex());
        sinhVien.setLop(lopHienTai);
        if (SinhVienDAO.capNhatThongTin(sinhVien)){
            JOptionPane.showConfirmDialog(null,Constants.SUCCESS,"Cập nhật thành công",JOptionPane.DEFAULT_OPTION);
        }else{
            JOptionPane.showConfirmDialog(null,Constants.FAIL,"Thông tin không hợp lệ!",JOptionPane.DEFAULT_OPTION);            
        }
    }//GEN-LAST:event_thayDoiBtnActionPerformed

    private void doiMatKhauBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_doiMatKhauBtnActionPerformed
        // TODO add your handling code here:
        new LoginForm().setVisible(true);
        new ChangePasswordDialog(this.sinhVien.getTaiKhoan()).setVisible(true);
        this.dispose();
    }//GEN-LAST:event_doiMatKhauBtnActionPerformed

    private void dangXuatBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_dangXuatBtnActionPerformed
        // TODO add your handling code here:
        this.sinhVien = null;
        new LoginForm().setVisible(true);
        this.dispose();
    }//GEN-LAST:event_dangXuatBtnActionPerformed

    private void timHocPhanBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_timHocPhanBtnActionPerformed
        // TODO add your handling code here:
        String keyword = timHocPhanText.getText();
        updateHocPhanTable(keyword);
    }//GEN-LAST:event_timHocPhanBtnActionPerformed

    private void dangKiBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_dangKiBtnActionPerformed
        // TODO add your handling code here:
        if (!DKHPDAO.kiemTraThoiGian()){
            JOptionPane.showConfirmDialog(null,"Đang không có kì đăng kí nào được mở\nHãy liên hệ với giáo vụ",Constants.FAIL,JOptionPane.DEFAULT_OPTION);                        
            return;
        }
        HocPhan hocPhan = dsHocPhan.get(hocPhanTable.getSelectedRow());
        if (SinhVienHocPhanDAO.daDangKiMon(sinhVien, hocPhan)){
            JOptionPane.showConfirmDialog(null,"Đã đăng kí môn này",Constants.FAIL,JOptionPane.DEFAULT_OPTION);                        
        }else if (SinhVienHocPhanDAO.trungThoiGianHoc(sinhVien, hocPhan)){
            JOptionPane.showConfirmDialog(null,"Trùng thời gian với một học phần đã đăng kí",Constants.FAIL,JOptionPane.DEFAULT_OPTION);                        
        }else if (SinhVienHocPhanDAO.soLuongMon(sinhVien)>8){
            JOptionPane.showConfirmDialog(null,"Vượt quá số môn cho phép (8)",Constants.FAIL,JOptionPane.DEFAULT_OPTION);            
        }else{
            if (SinhVienHocPhanDAO.dangKiHocPhan(sinhVien, hocPhan)){
                JOptionPane.showConfirmDialog(null,"Đăng kí thành công",Constants.SUCCESS,JOptionPane.DEFAULT_OPTION);                            
                updateAllTable("");
            }else{
                JOptionPane.showConfirmDialog(null,"Thông tin không hợp lệ!",Constants.FAIL,JOptionPane.DEFAULT_OPTION);                            
            }           
        }
    }//GEN-LAST:event_dangKiBtnActionPerformed

    private void huyDangKiBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_huyDangKiBtnActionPerformed
        // TODO add your handling code here:
        if (!DKHPDAO.kiemTraThoiGian()){
            JOptionPane.showConfirmDialog(null,"Đang không có kì đăng kí nào được mở\nHãy liên hệ với giáo vụ",Constants.FAIL,JOptionPane.DEFAULT_OPTION);                        
            return;
        }
        String maHocPhan = dsDaDangKi.get(daDangKiTable.getSelectedRow()).getMaHocPhan();
        SinhVienHocPhan svhp = SinhVienHocPhanDAO.timSVHP(sinhVien.getIdSv(), maHocPhan);
        if (SinhVienHocPhanDAO.huyDKHP(svhp.getIdSvhp())){
            JOptionPane.showConfirmDialog(null,"Hủy thành công",Constants.SUCCESS,JOptionPane.DEFAULT_OPTION);      
            updateAllTable("");
        }else{
            JOptionPane.showConfirmDialog(null,"Thất bại!",Constants.FAIL,JOptionPane.DEFAULT_OPTION);                            
        } 
    }//GEN-LAST:event_huyDangKiBtnActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(StudentDashboard.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(StudentDashboard.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(StudentDashboard.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(StudentDashboard.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new StudentDashboard().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel daDangKiPanel;
    private javax.swing.JScrollPane daDangKiScrollpane;
    private javax.swing.JTable daDangKiTable;
    private javax.swing.JButton dangKiBtn;
    private javax.swing.JButton dangXuatBtn;
    private javax.swing.JTextField diaChiText;
    private javax.swing.JButton doiMatKhauBtn;
    private javax.swing.ButtonGroup genderBtnGroup;
    private javax.swing.JPanel hocPhanPanel;
    private javax.swing.JScrollPane hocPhanScrollPane;
    private javax.swing.JTable hocPhanTable;
    private javax.swing.JButton huyDangKiBtn;
    private javax.swing.JPanel infoPanel;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JComboBox<String> lopCombo;
    private javax.swing.JLabel lopLabel;
    private javax.swing.JLabel maGvLabel;
    private javax.swing.JTextField maGvText;
    private javax.swing.JRadioButton namBtn;
    private com.github.lgooddatepicker.components.DatePicker ngaySinhPicker;
    private com.github.lgooddatepicker.components.DateTimePicker ngayTaoPicker;
    private javax.swing.JRadioButton nuBtn;
    private javax.swing.JTabbedPane operationsPanel;
    private javax.swing.JTextField sdtText;
    private javax.swing.JLabel soHocPhanLabel;
    private javax.swing.JTextField tenDangNhapText;
    private javax.swing.JLabel tenGvLabel;
    private javax.swing.JTextField tenGvText;
    private javax.swing.JButton thayDoiBtn;
    private javax.swing.JButton timHocPhanBtn;
    private javax.swing.JTextField timHocPhanText;
    // End of variables declaration//GEN-END:variables
}
