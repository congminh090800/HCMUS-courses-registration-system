/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package GUI;

import constants.Constants;
import javax.swing.JOptionPane;
import lop.Lop;
import lop.LopDAO;
import taikhoan.TaiKhoanDAO;
import utils.DateTimeUtil;
import vaitro.SinhVien;
import vaitro.SinhVienDAO;

/**
 *
 * @author Admin
 */
public class AddOrUpdateSinhVien extends javax.swing.JFrame {

    /**
     * Creates new form AddOrUpdateSinhVien
     */
    private int mode;
    private SinhVien sv;
    private ManagerDashboard md;
    public AddOrUpdateSinhVien(int mode, int idSv, ManagerDashboard md) {
        if (idSv>0) sv = SinhVienDAO.timSinhVien(idSv);
        this.mode = mode;
        this.md=md;
        initComponents();
        if (mode==Constants.UPDATE_MODE) setAvailableData();
    }

    private AddOrUpdateSinhVien() {
        throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    }
    private void setAvailableData(){
        hoTenText.setText(sv.getHoTen());
        maSvText.setText(sv.getMssv());
        sdtText.setText(sv.getSdt());
        diaChiText.setText(sv.getDiaChi());
        if (sv.getGioiTinh().equals("nam")) namBtn.setSelected(true); else nuBtn.setSelected(true);
        ngaySinhPicker.setDate(DateTimeUtil.convertToLocalDateViaSqlDate(sv.getNgaySinh()));
        matKhauText.setText(sv.getTaiKhoan().getMatKhau());
        lopCombo.setSelectedItem(sv.getLop().getTenLop());
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        gioiTinhBtnGroup = new javax.swing.ButtonGroup();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        matKhauText = new javax.swing.JTextField();
        if (mode == Constants.ADD_MODE) matKhauText.setEnabled(false);
        namBtn = new javax.swing.JRadioButton();
        nuBtn = new javax.swing.JRadioButton();
        ngaySinhPicker = new com.github.lgooddatepicker.components.DatePicker();
        sdtText = new javax.swing.JTextField();
        diaChiText = new javax.swing.JTextField();
        huyBtn = new javax.swing.JButton();
        xacNhanBtn = new javax.swing.JButton();
        maSvText = new javax.swing.JTextField();
        hoTenText = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        lopCombo = new javax.swing.JComboBox<>();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Thêm/ cập nhật sinh viên");
        setMinimumSize(new java.awt.Dimension(400, 450));
        setPreferredSize(new java.awt.Dimension(400, 450));
        setSize(new java.awt.Dimension(350, 400));
        getContentPane().setLayout(new java.awt.GridBagLayout());

        jLabel1.setText("MSSV:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.insets = new java.awt.Insets(0, 20, 0, 0);
        getContentPane().add(jLabel1, gridBagConstraints);

        jLabel2.setText("Họ tên:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.insets = new java.awt.Insets(0, 20, 0, 0);
        getContentPane().add(jLabel2, gridBagConstraints);

        jLabel3.setText("Địa chỉ:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.insets = new java.awt.Insets(0, 20, 0, 0);
        getContentPane().add(jLabel3, gridBagConstraints);

        jLabel4.setText("Số điện thoại:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.insets = new java.awt.Insets(0, 20, 0, 0);
        getContentPane().add(jLabel4, gridBagConstraints);

        jLabel5.setText("Ngày sinh:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.insets = new java.awt.Insets(0, 20, 0, 0);
        getContentPane().add(jLabel5, gridBagConstraints);

        jLabel6.setText("Giới tính:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.insets = new java.awt.Insets(0, 20, 0, 0);
        getContentPane().add(jLabel6, gridBagConstraints);

        jLabel7.setText("Mật khẩu:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 6;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.insets = new java.awt.Insets(10, 20, 0, 0);
        getContentPane().add(jLabel7, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 6;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.insets = new java.awt.Insets(10, 0, 0, 20);
        getContentPane().add(matKhauText, gridBagConstraints);

        gioiTinhBtnGroup.add(namBtn);
        namBtn.setText("nam");
        namBtn.setActionCommand("nam");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        getContentPane().add(namBtn, gridBagConstraints);

        gioiTinhBtnGroup.add(nuBtn);
        nuBtn.setText("nữ");
        nuBtn.setActionCommand("nữ");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 5;
        getContentPane().add(nuBtn, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 20);
        getContentPane().add(ngaySinhPicker, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 20);
        getContentPane().add(sdtText, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 20);
        getContentPane().add(diaChiText, gridBagConstraints);

        huyBtn.setText("Hủy bỏ");
        huyBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                huyBtnActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 8;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(10, 0, 0, 0);
        getContentPane().add(huyBtn, gridBagConstraints);

        xacNhanBtn.setText("Xác nhận");
        xacNhanBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                xacNhanBtnActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 8;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        gridBagConstraints.insets = new java.awt.Insets(10, 0, 0, 20);
        getContentPane().add(xacNhanBtn, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 20);
        getContentPane().add(maSvText, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 20);
        getContentPane().add(hoTenText, gridBagConstraints);

        jLabel8.setText("Lớp:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 7;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.insets = new java.awt.Insets(0, 20, 0, 0);
        getContentPane().add(jLabel8, gridBagConstraints);

        lopCombo.setModel(new javax.swing.DefaultComboBoxModel<>(md.layDsTenLop(md.getDsLop())));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 7;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 20);
        getContentPane().add(lopCombo, gridBagConstraints);

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void huyBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_huyBtnActionPerformed
        // TODO add your handling code here:
        this.dispose();
    }//GEN-LAST:event_huyBtnActionPerformed

    private void xacNhanBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_xacNhanBtnActionPerformed
        // TODO add your handling code here:
        boolean result = false;
        if (mode == Constants.ADD_MODE) sv = new SinhVien();
        sv.setMssv(maSvText.getText());
        sv.setHoTen(hoTenText.getText());
        sv.setDiaChi(diaChiText.getText());
        sv.setSdt(sdtText.getText());
        sv.setNgaySinh(DateTimeUtil.convertToDateViaLocalDate(ngaySinhPicker.getDate()));
        sv.setGioiTinh(gioiTinhBtnGroup.getSelection().getActionCommand());
        Integer iLop = md.getDsLop().get(lopCombo.getSelectedIndex()).getIdLop();
        Lop lopDaChon = LopDAO.timLop(iLop);
        if (mode == Constants.UPDATE_MODE){
            TaiKhoanDAO.doiMatKhau(sv.getTaiKhoan().getIdTk(), matKhauText.getText());
            sv.setLop(lopDaChon);
            result = SinhVienDAO.capNhatThongTin(sv);
        }else{
            result = SinhVienDAO.themSinhVien(sv, lopDaChon.getIdLop())>0;
        }
        if (result) {
            if (mode == Constants.UPDATE_MODE)JOptionPane.showConfirmDialog(null,"Cập nhật thành công",Constants.SUCCESS,JOptionPane.DEFAULT_OPTION);
            else JOptionPane.showConfirmDialog(null,"Tên đăng nhập và mật khẩu mặc định là MSSV",Constants.SUCCESS,JOptionPane.DEFAULT_OPTION);
            md.updateAllTable("");
        }else {
            JOptionPane.showConfirmDialog(null,Constants.MISSING_PARAMS,Constants.FAIL,JOptionPane.DEFAULT_OPTION);            
        }       
        this.dispose();        
    }//GEN-LAST:event_xacNhanBtnActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(AddOrUpdateSinhVien.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(AddOrUpdateSinhVien.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(AddOrUpdateSinhVien.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(AddOrUpdateSinhVien.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new AddOrUpdateSinhVien().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField diaChiText;
    private javax.swing.ButtonGroup gioiTinhBtnGroup;
    private javax.swing.JTextField hoTenText;
    private javax.swing.JButton huyBtn;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JComboBox<String> lopCombo;
    private javax.swing.JTextField maSvText;
    private javax.swing.JTextField matKhauText;
    private javax.swing.JRadioButton namBtn;
    private com.github.lgooddatepicker.components.DatePicker ngaySinhPicker;
    private javax.swing.JRadioButton nuBtn;
    private javax.swing.JTextField sdtText;
    private javax.swing.JButton xacNhanBtn;
    // End of variables declaration//GEN-END:variables
}
