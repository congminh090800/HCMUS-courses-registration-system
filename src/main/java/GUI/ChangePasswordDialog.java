/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package GUI;

import constants.Constants;
import javax.swing.JOptionPane;
import taikhoan.TaiKhoan;
import taikhoan.TaiKhoanDAO;

/**
 *
 * @author Admin
 */
public class ChangePasswordDialog extends javax.swing.JFrame {

    /**
     * Creates new form ChangePasswordDialog
     */
    private TaiKhoan taiKhoan;
    public ChangePasswordDialog(TaiKhoan taiKhoan) {
        this.taiKhoan = taiKhoan;
        initComponents();
    }

    private ChangePasswordDialog() {
        this.taiKhoan = TaiKhoanDAO.timTaiKhoan(3);
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        matKhauCuLabel = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        cancelBtn = new javax.swing.JButton();
        comfirmBtn = new javax.swing.JButton();
        matKhauCuText = new javax.swing.JPasswordField();
        matKhauMoiText = new javax.swing.JPasswordField();
        nhapLaiText = new javax.swing.JPasswordField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Đổi mật khẩu");
        setPreferredSize(new java.awt.Dimension(355, 160));
        setResizable(false);
        setSize(new java.awt.Dimension(355, 160));
        getContentPane().setLayout(new java.awt.GridBagLayout());

        matKhauCuLabel.setForeground(new java.awt.Color(0, 0, 0));
        matKhauCuLabel.setText("Mật khẩu cũ:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.insets = new java.awt.Insets(0, 30, 0, 0);
        getContentPane().add(matKhauCuLabel, gridBagConstraints);

        jLabel2.setForeground(new java.awt.Color(0, 0, 0));
        jLabel2.setText("Mật khẩu mới:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.insets = new java.awt.Insets(0, 30, 0, 0);
        getContentPane().add(jLabel2, gridBagConstraints);

        jLabel3.setForeground(new java.awt.Color(0, 0, 0));
        jLabel3.setText("Nhập lại");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.insets = new java.awt.Insets(0, 30, 0, 0);
        getContentPane().add(jLabel3, gridBagConstraints);

        cancelBtn.setForeground(new java.awt.Color(0, 0, 0));
        cancelBtn.setText("Hủy bỏ");
        cancelBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelBtnActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 0.3;
        getContentPane().add(cancelBtn, gridBagConstraints);

        comfirmBtn.setForeground(new java.awt.Color(0, 0, 0));
        comfirmBtn.setText("Xác nhận");
        comfirmBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                comfirmBtnActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        gridBagConstraints.weightx = 0.3;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 30);
        getContentPane().add(comfirmBtn, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 30);
        getContentPane().add(matKhauCuText, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 30);
        getContentPane().add(matKhauMoiText, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 30);
        getContentPane().add(nhapLaiText, gridBagConstraints);

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void cancelBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelBtnActionPerformed
        // TODO add your handling code here:
        this.dispose();
    }//GEN-LAST:event_cancelBtnActionPerformed

    private void comfirmBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_comfirmBtnActionPerformed
        // TODO add your handling code here:
        if (taiKhoan.getMatKhau() == null ? matKhauCuText.getText() != null : !taiKhoan.getMatKhau().equals(matKhauCuText.getText())){
            JOptionPane.showConfirmDialog(null,Constants.UNAUTHORIZED,Constants.FAIL,JOptionPane.DEFAULT_OPTION);
        }else if (!matKhauMoiText.getText().equals(nhapLaiText.getText())){
            JOptionPane.showConfirmDialog(null,Constants.MISSING_PARAMS,Constants.FAIL,JOptionPane.DEFAULT_OPTION);
        }else {
            int dialogResult = JOptionPane.showConfirmDialog(null,"Bạn có muốn đổi mật khẩu?",Constants.ASK_FOR_COMFIRMATION, JOptionPane.YES_NO_OPTION);
            if (dialogResult == JOptionPane.YES_OPTION){                
                if(TaiKhoanDAO.doiMatKhau(taiKhoan.getIdTk(), matKhauMoiText.getText())){
                    JOptionPane.showConfirmDialog(null,"Đổi mật khẩu thành công",Constants.SUCCESS, JOptionPane.DEFAULT_OPTION);
                }else{
                    JOptionPane.showConfirmDialog(null,"Đổi mật khẩu thất bại",Constants.FAIL, JOptionPane.DEFAULT_OPTION);                    
                }
                this.dispose();
            }
        }
    }//GEN-LAST:event_comfirmBtnActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ChangePasswordDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ChangePasswordDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ChangePasswordDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ChangePasswordDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ChangePasswordDialog().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton cancelBtn;
    private javax.swing.JButton comfirmBtn;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel matKhauCuLabel;
    private javax.swing.JPasswordField matKhauCuText;
    private javax.swing.JPasswordField matKhauMoiText;
    private javax.swing.JPasswordField nhapLaiText;
    // End of variables declaration//GEN-END:variables
}
